[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "thermo-nerf"
description = 'thermo-nerf'
readme = "README.md"
requires-python = ">=3.10"
keywords = ["pytorch", "thermal", "nerf", "mlflow", "flir"]
dependencies = ["nerfstudio >= 1.1.5", "mlflow >= 2.11.1", "ruff >= 0.7.4"]
dynamic = ["version"]

[project.optional-dependencies]
flir = ["flirimageextractor >= 1.5.3"]

[tool.hatch.build.targets.wheel]
packages = ["thermo_nerf", "thermo_scenes"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "no-guess-dev"

[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

# RUFF

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F"]
ignore = ["F722", "F821"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-third-party = ["FlirImageExtractor"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

# CLI

[project.scripts]
thermoscenes_images_to_nerf_dataset = "thermo_scenes.scripts.images_to_nerf_dataset:main"
thermoscenes_rename_files = "thermo_scenes.scripts.rename_files:main"
thermoscenes_rescale_thermal_images = "thermo_scenes.scripts.rescale_thermal_images:main"
thermoscenes_preprocess_thermal = "thermo_scenes.scripts.preprocess_thermal:main"
